<?xml version="1.0" encoding="UTF-8"?>
<job>
  <name>Inicio</name>
  <description />
  <extended_description />
  <job_version />
  <directory>/</directory>
  <created_user>-</created_user>
  <created_date>2019/01/21 22:13:15.430</created_date>
  <modified_user>-</modified_user>
  <modified_date>2019/01/21 22:13:15.430</modified_date>
  <parameters>
    </parameters>
  <connection>
    <name>DW-AR</name>
    <server>localhost</server>
    <type>MYSQL</type>
    <access>Native</access>
    <database>DW-AR</database>
    <port>3306</port>
    <username>root</username>
    <password>Encrypted 2be98afc86af39b85ac169c71cf87aad6</password>
    <servername />
    <data_tablespace />
    <index_tablespace />
    <attributes>
      <attribute>
        <code>FORCE_IDENTIFIERS_TO_LOWERCASE</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>FORCE_IDENTIFIERS_TO_UPPERCASE</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>IS_CLUSTERED</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>PORT_NUMBER</code>
        <attribute>3306</attribute>
      </attribute>
      <attribute>
        <code>PRESERVE_RESERVED_WORD_CASE</code>
        <attribute>Y</attribute>
      </attribute>
      <attribute>
        <code>QUOTE_ALL_FIELDS</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>STREAM_RESULTS</code>
        <attribute>Y</attribute>
      </attribute>
      <attribute>
        <code>SUPPORTS_BOOLEAN_DATA_TYPE</code>
        <attribute>Y</attribute>
      </attribute>
      <attribute>
        <code>SUPPORTS_TIMESTAMP_DATA_TYPE</code>
        <attribute>Y</attribute>
      </attribute>
      <attribute>
        <code>USE_POOLING</code>
        <attribute>N</attribute>
      </attribute>
    </attributes>
  </connection>
  <connection>
    <name>DW-dw</name>
    <server>localhost</server>
    <type>MYSQL</type>
    <access>Native</access>
    <database>DW-dw</database>
    <port>3306</port>
    <username>root</username>
    <password>Encrypted 2be98afc86af39b85ac169c71cf87aad6</password>
    <servername />
    <data_tablespace />
    <index_tablespace />
    <attributes>
      <attribute>
        <code>FORCE_IDENTIFIERS_TO_LOWERCASE</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>FORCE_IDENTIFIERS_TO_UPPERCASE</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>IS_CLUSTERED</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>PORT_NUMBER</code>
        <attribute>3306</attribute>
      </attribute>
      <attribute>
        <code>PRESERVE_RESERVED_WORD_CASE</code>
        <attribute>Y</attribute>
      </attribute>
      <attribute>
        <code>QUOTE_ALL_FIELDS</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>STREAM_RESULTS</code>
        <attribute>Y</attribute>
      </attribute>
      <attribute>
        <code>SUPPORTS_BOOLEAN_DATA_TYPE</code>
        <attribute>Y</attribute>
      </attribute>
      <attribute>
        <code>SUPPORTS_TIMESTAMP_DATA_TYPE</code>
        <attribute>Y</attribute>
      </attribute>
      <attribute>
        <code>USE_POOLING</code>
        <attribute>N</attribute>
      </attribute>
    </attributes>
  </connection>
  <slaveservers>
    </slaveservers>
  <job-log-table>
    <connection />
    <schema />
    <table />
    <size_limit_lines />
    <interval />
    <timeout_days />
    <field>
      <id>ID_JOB</id>
      <enabled>Y</enabled>
      <name>ID_JOB</name>
    </field>
    <field>
      <id>CHANNEL_ID</id>
      <enabled>Y</enabled>
      <name>CHANNEL_ID</name>
    </field>
    <field>
      <id>JOBNAME</id>
      <enabled>Y</enabled>
      <name>JOBNAME</name>
    </field>
    <field>
      <id>STATUS</id>
      <enabled>Y</enabled>
      <name>STATUS</name>
    </field>
    <field>
      <id>LINES_READ</id>
      <enabled>Y</enabled>
      <name>LINES_READ</name>
    </field>
    <field>
      <id>LINES_WRITTEN</id>
      <enabled>Y</enabled>
      <name>LINES_WRITTEN</name>
    </field>
    <field>
      <id>LINES_UPDATED</id>
      <enabled>Y</enabled>
      <name>LINES_UPDATED</name>
    </field>
    <field>
      <id>LINES_INPUT</id>
      <enabled>Y</enabled>
      <name>LINES_INPUT</name>
    </field>
    <field>
      <id>LINES_OUTPUT</id>
      <enabled>Y</enabled>
      <name>LINES_OUTPUT</name>
    </field>
    <field>
      <id>LINES_REJECTED</id>
      <enabled>Y</enabled>
      <name>LINES_REJECTED</name>
    </field>
    <field>
      <id>ERRORS</id>
      <enabled>Y</enabled>
      <name>ERRORS</name>
    </field>
    <field>
      <id>STARTDATE</id>
      <enabled>Y</enabled>
      <name>STARTDATE</name>
    </field>
    <field>
      <id>ENDDATE</id>
      <enabled>Y</enabled>
      <name>ENDDATE</name>
    </field>
    <field>
      <id>LOGDATE</id>
      <enabled>Y</enabled>
      <name>LOGDATE</name>
    </field>
    <field>
      <id>DEPDATE</id>
      <enabled>Y</enabled>
      <name>DEPDATE</name>
    </field>
    <field>
      <id>REPLAYDATE</id>
      <enabled>Y</enabled>
      <name>REPLAYDATE</name>
    </field>
    <field>
      <id>LOG_FIELD</id>
      <enabled>Y</enabled>
      <name>LOG_FIELD</name>
    </field>
    <field>
      <id>EXECUTING_SERVER</id>
      <enabled>N</enabled>
      <name>EXECUTING_SERVER</name>
    </field>
    <field>
      <id>EXECUTING_USER</id>
      <enabled>N</enabled>
      <name>EXECUTING_USER</name>
    </field>
    <field>
      <id>START_JOB_ENTRY</id>
      <enabled>N</enabled>
      <name>START_JOB_ENTRY</name>
    </field>
    <field>
      <id>CLIENT</id>
      <enabled>N</enabled>
      <name>CLIENT</name>
    </field>
  </job-log-table>
  <jobentry-log-table>
    <connection />
    <schema />
    <table />
    <timeout_days />
    <field>
      <id>ID_BATCH</id>
      <enabled>Y</enabled>
      <name>ID_BATCH</name>
    </field>
    <field>
      <id>CHANNEL_ID</id>
      <enabled>Y</enabled>
      <name>CHANNEL_ID</name>
    </field>
    <field>
      <id>LOG_DATE</id>
      <enabled>Y</enabled>
      <name>LOG_DATE</name>
    </field>
    <field>
      <id>JOBNAME</id>
      <enabled>Y</enabled>
      <name>TRANSNAME</name>
    </field>
    <field>
      <id>JOBENTRYNAME</id>
      <enabled>Y</enabled>
      <name>STEPNAME</name>
    </field>
    <field>
      <id>LINES_READ</id>
      <enabled>Y</enabled>
      <name>LINES_READ</name>
    </field>
    <field>
      <id>LINES_WRITTEN</id>
      <enabled>Y</enabled>
      <name>LINES_WRITTEN</name>
    </field>
    <field>
      <id>LINES_UPDATED</id>
      <enabled>Y</enabled>
      <name>LINES_UPDATED</name>
    </field>
    <field>
      <id>LINES_INPUT</id>
      <enabled>Y</enabled>
      <name>LINES_INPUT</name>
    </field>
    <field>
      <id>LINES_OUTPUT</id>
      <enabled>Y</enabled>
      <name>LINES_OUTPUT</name>
    </field>
    <field>
      <id>LINES_REJECTED</id>
      <enabled>Y</enabled>
      <name>LINES_REJECTED</name>
    </field>
    <field>
      <id>ERRORS</id>
      <enabled>Y</enabled>
      <name>ERRORS</name>
    </field>
    <field>
      <id>RESULT</id>
      <enabled>Y</enabled>
      <name>RESULT</name>
    </field>
    <field>
      <id>NR_RESULT_ROWS</id>
      <enabled>Y</enabled>
      <name>NR_RESULT_ROWS</name>
    </field>
    <field>
      <id>NR_RESULT_FILES</id>
      <enabled>Y</enabled>
      <name>NR_RESULT_FILES</name>
    </field>
    <field>
      <id>LOG_FIELD</id>
      <enabled>N</enabled>
      <name>LOG_FIELD</name>
    </field>
    <field>
      <id>COPY_NR</id>
      <enabled>N</enabled>
      <name>COPY_NR</name>
    </field>
  </jobentry-log-table>
  <channel-log-table>
    <connection />
    <schema />
    <table />
    <timeout_days />
    <field>
      <id>ID_BATCH</id>
      <enabled>Y</enabled>
      <name>ID_BATCH</name>
    </field>
    <field>
      <id>CHANNEL_ID</id>
      <enabled>Y</enabled>
      <name>CHANNEL_ID</name>
    </field>
    <field>
      <id>LOG_DATE</id>
      <enabled>Y</enabled>
      <name>LOG_DATE</name>
    </field>
    <field>
      <id>LOGGING_OBJECT_TYPE</id>
      <enabled>Y</enabled>
      <name>LOGGING_OBJECT_TYPE</name>
    </field>
    <field>
      <id>OBJECT_NAME</id>
      <enabled>Y</enabled>
      <name>OBJECT_NAME</name>
    </field>
    <field>
      <id>OBJECT_COPY</id>
      <enabled>Y</enabled>
      <name>OBJECT_COPY</name>
    </field>
    <field>
      <id>REPOSITORY_DIRECTORY</id>
      <enabled>Y</enabled>
      <name>REPOSITORY_DIRECTORY</name>
    </field>
    <field>
      <id>FILENAME</id>
      <enabled>Y</enabled>
      <name>FILENAME</name>
    </field>
    <field>
      <id>OBJECT_ID</id>
      <enabled>Y</enabled>
      <name>OBJECT_ID</name>
    </field>
    <field>
      <id>OBJECT_REVISION</id>
      <enabled>Y</enabled>
      <name>OBJECT_REVISION</name>
    </field>
    <field>
      <id>PARENT_CHANNEL_ID</id>
      <enabled>Y</enabled>
      <name>PARENT_CHANNEL_ID</name>
    </field>
    <field>
      <id>ROOT_CHANNEL_ID</id>
      <enabled>Y</enabled>
      <name>ROOT_CHANNEL_ID</name>
    </field>
  </channel-log-table>
  <pass_batchid>N</pass_batchid>
  <shared_objects_file />
  <entries>
    <entry>
      <name>Clean AR</name>
      <description />
      <type>SQL</type>
      <attributes />
      <sql>delete from dimCalendario;
delete from dimDisco;
delete from dimCliente;
delete from dimLoja;
delete from dimGenero;
delete from dimArtista;
delete from TF_Vendas;

delete from pre_dim_disco;
delete from pre_dim_Loja;
delete from pre_dim_Cliente;
delete from pre_dim_Genero;
delete from pre_dim_Artista;
delete from pre_TF_Vendas;

delete from lk_loja;
delete from lk_Cliente;
delete from lk_Artista;
delete from lk_Disco;
delete from lk_Artista;
</sql>
      <useVariableSubstitution>F</useVariableSubstitution>
      <sqlfromfile>F</sqlfromfile>
      <sqlfilename />
      <sendOneStatement>F</sendOneStatement>
      <connection>DW-AR</connection>
      <parallel>Y</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>374</xloc>
      <yloc>211</yloc>
      <attributes_kjc />
    </entry>
    <entry>
      <name>Clean DW</name>
      <description />
      <type>SQL</type>
      <attributes />
      <sql>delete from dimCalendario;
delete from dimDisco;
delete from dimCliente;
delete from dimLoja;
delete from dimGenero;
delete from dimArtista;
delete from TF_Vendas;

delete from histDisco;
delete from histCliente;
</sql>
      <useVariableSubstitution>F</useVariableSubstitution>
      <sqlfromfile>F</sqlfromfile>
      <sqlfilename />
      <sendOneStatement>F</sendOneStatement>
      <connection>DW-dw</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>438</xloc>
      <yloc>211</yloc>
      <attributes_kjc />
    </entry>
    <entry>
      <name>Activate Procedure Insert Disco</name>
      <description />
      <type>SQL</type>
      <attributes />
      <sql>USE `dw-ar`;
DROP procedure IF EXISTS `sp_insert_disco`;

DELIMITER $$
USE `dw-ar`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_insert_disco`(p_id_disco_source INT, p_source_id VARCHAR(45),p_titulo VARCHAR(128),
									p_compra_preco FLOAT, p_tipo VARCHAR(128), p_pvp FLOAT,p_data_compra DATE)
BEGIN
INSERT INTO lk_disco(id_disco_source,source_id,data_compra) VALUES (p_id_disco_source,p_source_id,p_data_compra);
IF (p_data_compra is not null) THEN
	INSERT INTO `dw-ar`.dimdisco(titulo,compra_preco,tipo,pvp,data_compra) values(p_titulo,p_compra_preco,p_tipo,p_pvp,p_data_compra);
END IF;
END$$

DELIMITER ;

DROP procedure IF EXISTS `sp_insert_cliente`;

DELIMITER $$
USE `dw-ar`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_insert_cliente`(p_id_Cliente_source INT, p_source_id VARCHAR(45),p_email VARCHAR(128),
p_nome VARCHAR(45),p_localidade VARCHAR(45), p_estatuto VARCHAR(45), p_nr_discos INT)
BEGIN
DECLARE id, existe INT;
SET id = (SELECT LK.id FROM lk_cliente AS LK
			WHERE LK.email = p_email
            AND p_source_id like LK.source_id);
            
IF(id is null) THEN/*id nao existe na tabela lookup*/
START TRANSACTION;
INSERT INTO lk_cliente(id_Cliente_source,source_id,email) VALUES(p_id_Cliente_source,p_source_id,p_email);
SET id = (SELECT LK.id FROM lk_cliente AS LK
			WHERE LK.email = p_email
            AND p_source_id like LK.source_id);
COMMIT; 
END IF;
SET existe = (SELECT idDimCliente FROM dimcliente WHERE iddimCliente = id);
IF (existe is null) THEN
INSERT INTO dimcliente VALUES(id,p_email,p_nome,p_localidade,p_estatuto,p_nr_discos);
END IF;
END$$
DELIMITER ;

DROP procedure IF EXISTS `sp_insert_loja`;

DELIMITER $$
USE `dw-ar`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_insert_loja`(p_idpre_dim_loja INT, p_source_id VARCHAR(45),
p_localidade VARCHAR(45))
BEGIN
DECLARE id, existe INT;
SET id = (SELECT LK.id FROM lk_loja AS LK
			WHERE p_source_id like LK.source_id
            AND p_localidade like LK.localidade);

IF(id is null) THEN
START TRANSACTION;
INSERT INTO lk_loja(id_loja_source,source_id,localidade) VALUES(p_idpre_dim_loja,p_source_id,p_localidade);
SET id = (SELECT LK.id FROM lk_loja AS LK 
			WHERE p_source_id like LK.source_id
            AND p_localidade like LK.localidade);
COMMIT;
END IF;

SET existe = (SELECT iddimLoja FROM dimloja WHERE iddimLoja = id);
IF (existe is null) THEN
INSERT INTO dimloja VALUES(id,p_localidade);
END IF;
END$$

DELIMITER ;

DROP procedure IF EXISTS `sp_insert_artista`;

DELIMITER $$
USE `dw-ar`$$
CREATE PROCEDURE `sp_insert_artista` (p_source_id VARCHAR(45), 
p_nome VARCHAR(128),p_id_disco INT)
BEGIN
DECLARE idA, idD, existe INT;
SET idA = (SELECT LK.id FROM lk_artista AS LK
			WHERE LK.nome = p_nome
            AND p_source_id like LK.source);
SET idD = (SELECT LKD.id FROM lk_disco AS LKD
			WHERE LKD.id_disco_source = p_id_disco
            AND p_source_id like LKD.source_id);

IF(idA is null) THEN
START TRANSACTION;
INSERT INTO lk_artista(id_disco_source,source,nome) VALUES(p_id_disco,p_source_id,p_nome);
SET idA = (SELECT LK.id FROM lk_artista AS LK
			WHERE LK.nome = p_nome
            AND p_source_id like LK.source);
COMMIT;
END IF;

SET existe = (SELECT idDimArtista FROM dimartista WHERE iddimArtista = idA);
IF (existe is null) THEN
INSERT INTO dimArtista VALUES(idA,p_nome,idD);
END IF;
END$$

DELIMITER ;


DROP procedure IF EXISTS `sp_insert_genero`;

DELIMITER $$
USE `dw-ar`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_insert_genero`(p_source_id VARCHAR(45), 
p_genero VARCHAR(128),p_id_disco INT)
BEGIN
DECLARE idG, idD, existe INT;
SET idG = (SELECT LK.id FROM lk_genero AS LK
			WHERE LK.genero = p_genero
            AND p_source_id like LK.source_id);
SET idD = (SELECT LKD.id FROM lk_disco AS LKD
			WHERE LKD.id_disco_source = p_id_disco
            AND p_source_id like LKD.source_id);

IF(idG is null) THEN
START TRANSACTION;
INSERT INTO lk_genero(id_disco_source,source_id,genero) VALUES(p_id_disco,p_source_id,p_genero);
SET idG = (SELECT LK.id FROM lk_genero AS LK
			WHERE LK.genero = p_genero
            AND p_source_id like LK.source_id);
COMMIT; 
END IF;
SET existe = (SELECT idDimGenero FROM dimgenero WHERE iddimGenero = idG);
IF (existe is null) THEN
INSERT INTO dimGenero VALUES(idG,p_genero,idD);
END IF;
END$$

DELIMITER ;



</sql>
      <useVariableSubstitution>F</useVariableSubstitution>
      <sqlfromfile>F</sqlfromfile>
      <sqlfilename />
      <sendOneStatement>F</sendOneStatement>
      <connection>DW-AR</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>640</xloc>
      <yloc>208</yloc>
      <attributes_kjc />
    </entry>
    <entry>
      <name>Activate Procedure Inc_Datas</name>
      <description />
      <type>SQL</type>
      <attributes />
      <sql>USE `dw-ar`;
DROP procedure IF EXISTS `inc_datas`;

DELIMITER $$
USE `dw-ar`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `inc_datas`()
BEGIN

SET @startDate = (SELECT MIN(data_compra) FROM pre_dim_disco);
SET @endDate = (SELECT MAX(data_compra) FROM pre_dim_disco);
	
    while @startDate&lt;=@endDate DO
		SET @m = (SELECT MONTH(@startDate));
		SET @ano = (SELECT YEAR(@startDate));
		SET @mes = concat(@m,"-",@ano);
		SET @dia = dayname(@startDate);
        SET @s = (SELECT WEEK(@startDate));
        SET @sem = concat(@s,"-",@ano);
		select 
		CASE WHEN dayofweek(@startDate) IN (7,1) THEN 'S'
			ELSE 'N'
			END
		INTO @fds;
		INSERT INTO `dw-ar`.dimcalendario(`fim-de-semana`,mes,semana,dia,data)
		VALUES(@fds,@mes,@sem,@dia,@startDate);
		
		SET @startDate = DATE_ADD(@startDate, INTERVAL 1 DAY);
	END WHILE;

		SET @m = (SELECT MONTH(@startDate));
		SET @ano = (SELECT YEAR(@startDate));
		SET @mes = concat(@m,"-",@ano);
		SET @dia = dayname(@startDate);
        SET @s = (SELECT WEEK(@startDate));
        SET @sem = concat(@s,"-",@ano);
		select 
		CASE WHEN dayofweek(@startDate) IN (7,1) THEN 'S'
			ELSE 'N'
			END 
		INTO @fds;
		INSERT INTO `dw-ar`.dimcalendario(`fim-de-semana`,mes,semana,dia,data)
		VALUES(@fds,@mes,@sem,@dia,@startDate);
END$$

DELIMITER ;

</sql>
      <useVariableSubstitution>F</useVariableSubstitution>
      <sqlfromfile>F</sqlfromfile>
      <sqlfilename />
      <sendOneStatement>F</sendOneStatement>
      <connection>DW-AR</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>646</xloc>
      <yloc>275</yloc>
      <attributes_kjc />
    </entry>
    <entry>
      <name>Activate Procedure Insert_Factos</name>
      <description />
      <type>SQL</type>
      <attributes />
      <sql>USE `dw-ar`;
DROP procedure IF EXISTS `sp_insert_factos`;

DELIMITER $$
USE `dw-ar`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_insert_factos`(p_localidade VARCHAR(128),
p_data_compra DATE, p_custo_total FLOAT, p_id_disco INT,
p_email VARCHAR(128))
BEGIN	
DECLARE loc, disco,cliente,calendario VARCHAR(128);
	SET loc = (SELECT L.id FROM `dw-ar`.lk_loja AS L
					WHERE L.localidade like p_localidade);
	SET disco = (SELECT D.id FROM `dw-ar`.lk_disco AS D
					WHERE D.id_disco_source = p_id_disco
                    AND D.data_compra = p_data_compra);
	SET cliente = (SELECT C.id FROM `dw-ar`.lk_cliente AS C
					WHERE C.email = p_email);
    SET calendario = (SELECT CAL.idDimCalendario FROM `dw-ar`.dimcalendario AS CAL
						WHERE CAL.data = p_data_compra);  
                        
	INSERT INTO tf_vendas(valor,calendarioFK,clienteFK,discoFK,lojaFK)
				VALUES(p_custo_total,calendario,cliente,disco,loc);
END$$

DELIMITER ;
</sql>
      <useVariableSubstitution>F</useVariableSubstitution>
      <sqlfromfile>F</sqlfromfile>
      <sqlfilename />
      <sendOneStatement>F</sendOneStatement>
      <connection>DW-AR</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>646</xloc>
      <yloc>339</yloc>
      <attributes_kjc />
    </entry>
    <entry>
      <name>Start</name>
      <description />
      <type>SPECIAL</type>
      <attributes />
      <start>Y</start>
      <dummy>N</dummy>
      <repeat>N</repeat>
      <schedulerType>0</schedulerType>
      <intervalSeconds>0</intervalSeconds>
      <intervalMinutes>60</intervalMinutes>
      <hour>12</hour>
      <minutes>0</minutes>
      <weekDay>1</weekDay>
      <DayOfMonth>1</DayOfMonth>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>176</xloc>
      <yloc>208</yloc>
      <attributes_kjc />
    </entry>
  </entries>
  <hops>
    <hop>
      <from>Start</from>
      <to>Clean AR</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>Y</unconditional>
    </hop>
    <hop>
      <from>Clean AR</from>
      <to>Clean DW</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>Clean DW</from>
      <to>Activate Procedure Insert Disco</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>Activate Procedure Insert Disco</from>
      <to>Activate Procedure Inc_Datas</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>Activate Procedure Inc_Datas</from>
      <to>Activate Procedure Insert_Factos</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
  </hops>
  <notepads>
  </notepads>
  <attributes />
</job>
